# -*- coding: utf-8 -*-
"""HW2 BMGT 408V 2023

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Mle7F8HI1MaW3qmO2gEpV5QezBYXTsvd

# HW2 Colab

This homework asks you to make multiple using the same data as HW1. The objective is to 1) practice using Seaborn, and 2) compare Excel vs. Seaborn for chart-making. 

Remember to make the chart easy-to-read and include chart titles and axis titles. Use: https://www.kaggle.com/datasets/gabrielramos87/an-online-shop-business as the data source.

Save this Colab to you drive, answer the following questions, and then submit the printed PDF file in ELMS. Include the URL to your completed Colab as a comment in the submitted assignment. Remember to change the permissions so that the instructor and TA can assess it.

## Q0. Import Libraries and Process Data (10 points)

Import the necessary libraries.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

"""Upload the data into Google Colab."""

sales = pd.read_csv ('Sales Transaction .csv')

"""Read the file and create a data frame. Remove the records with negative Quantity using the expression Quantity >= 0."""

sales_table = sales.loc[sales['Quantity'] >=0,
                          ['Date', 'Price', 'Quantity', 'Country', 'Date2']]

sales_table.head()

sales_table.describe()

"""## Q1a. Histogram (5 points)
Create a histogram for the available values of Price. 
"""

fig = plt.figure(figsize = (15,7))
plt.suptitle("Available Values of Price", fontsize=16, y=0.96)
sns.set_theme(style = "whitegrid")
ax = sns.histplot(sales_table["Price"], color="red", bins = 25)
ax.set (xlabel = 'Values of Price', ylabel = 'Count of Price', xlim = (0,50))

"""## Q1b. Density (5 points)

Create a density plot for the available prices.
"""

fig = plt.figure(figsize = (15,7))
plt.suptitle("Available Prices", fontsize=16, y=0.96)
sns.set_theme(style = "whitegrid")
ax = sns.kdeplot(x="Price", data=sales_table) 
ax.set (xlim = (0,50))

"""## Q2. Count (10 points)

Create a count table for the countries in the dataset. Make sure that the data are sorted to make it easier on the reader.

Which country is the most prevalent?
"""

country = sales_table ['Country']
country.value_counts()

"""## Q3. Relationship (10 points)

Create a chart that shows the relationship between price and quantity in the dataset. Include a trendline and make the trendline a different color than the points.
"""

fig = plt.figure(figsize = (15,7))
ax = sns.regplot(data=sales_table, x="Quantity", y="Price", color="green", 
                 scatter_kws={"alpha": 0.4, "color": "blue"})
plt.suptitle("Relationship Between Price and Quantity", fontsize=16, y=0.96)
ax.set (xlim = (0,1200), ylim = (0,70))

"""## Q4. Line chart (10 points)

Create a line chart of the sum of the quantity for each day. Make sure that the x-axis is appropriately labeled. 
"""

import matplotlib.dates as mdates
fig = plt.figure(figsize = (15,7))
plt.suptitle("Sum of Quantity for Each Day", fontsize=16, y=0.96)
ax = sns.lineplot(x= 'Date', y="Quantity",
                   data=sales_table, ci=False, estimator=np.sum)
#ax.xaxis.set_major_locator(mdates.DayLocator(interval=7))
ax.xaxis.set_major_formatter(mdates.DateFormatter('%b %d'))
ax.set (xlabel = 'Date', ylabel = 'Sum of Quantity')